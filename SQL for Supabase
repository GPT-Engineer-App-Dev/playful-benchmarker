-- Add a new column to the runs table
ALTER TABLE runs
ADD COLUMN total_time_usage INTEGER DEFAULT 0;

-- Create or replace a function to update the total_time_usage
CREATE OR REPLACE FUNCTION update_run_time_usage(
  run_id UUID,
  time_increment INTEGER
)
RETURNS VOID AS $$
BEGIN
  UPDATE runs
  SET total_time_usage = total_time_usage + time_increment
  WHERE id = run_id;
END;
$$ LANGUAGE plpgsql;
-- Create or replace a function to start a run transactionally
CREATE OR REPLACE FUNCTION start_paused_run(run_id UUID)
RETURNS BOOLEAN AS $$
DECLARE
  current_state TEXT;
BEGIN
  -- Start a transaction
  BEGIN
    -- Lock the row and get the current state
    SELECT state INTO current_state
    FROM runs
    WHERE id = run_id
    FOR UPDATE;

    -- Check if the state is 'paused'
    IF current_state = 'paused' THEN
      -- Update the state to 'running'
      UPDATE runs
      SET state = 'running'
      WHERE id = run_id;
      
      RETURN TRUE;
    ELSE
      -- If the state is not 'paused', return false
      RETURN FALSE;
    END IF;
  END;
END;
$$ LANGUAGE plpgsql;
